(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{241:function(t,n,e){"use strict";e.r(n);var a=e(0),s=Object(a.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",{staticClass:"content"},[e("p",[t._v("实现 LazyMan 函数，具有以下调用方式 和 功能：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// Input:\nLazyMan('Tom').sleepFirst(3).eat('lunch')\n// Output:\n--- 延时3秒\n我是 Tom\n我刚睡了 3 秒钟\n去吃午餐\n")])])]),e("p",[t._v("思路：")]),t._v(" "),e("ol",[e("li",[t._v("将所有的事件先收集进入执行队列，再从头开始执行")]),t._v(" "),e("li",[t._v("执行返回的对象里要 递归 包含自身")]),t._v(" "),e("li",[t._v("为保证异步事件的正确执行顺序，每个事件都使用 next() 函数回调下一个事件执行")])])])}],!1,null,null,null);n.default=s.exports}}]);